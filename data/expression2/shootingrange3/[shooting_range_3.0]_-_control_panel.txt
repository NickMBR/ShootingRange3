#[
    NickMBR - Jun/2019
    Shooting Range 3.0
    https://github.com/NickMBR/ShootingRange3
]#

@name [Shooting Range 3.0] - Control Panel

# MAIN I/O
@inputs SCREEN:wirelink USER:entity
@persist [CURSOR, POSA, POSB]:vector2 [PAGE, MODE, ACTION]:string SCREEN_USER:entity [COLORS, BUTTONS]:table [CLEAR_SCREEN, LOAD_SCREEN, DISABLE_ACTION]:number

# AFK SYSTEM
@inputs [AFK_TIME_LEFT, AFK_KICK]:number
@outputs [AFK_ACTIVE]:number

# GLOBALS
@persist [GPLAYERS, GDATA]:gtable

runOnTick(66)
MODE = "DEVELOPMENT"
LOAD_SCREEN = 500 # USE 1500 ON PRODUCTION

if (first() | duped()) {
    # IMPORTS
    #include "shootingrange3/[shooting_range_3.0]_-_utilities"

    # COLORS
    COLORS = table()
    COLORS["BACKGROUND", vector] = vec(41)
    COLORS["FOREGROUND", vector] = vec(230)
    COLORS["GREY1", vector] = vec(80)
    COLORS["GREY2", vector] = vec(60)
    COLORS["GREY3", vector] = vec(100)
    COLORS["PRIMARY", vector] = vec(161, 51, 34)
    COLORS["ACCENT", vector] = vec(0, 255, 127)
    
    # SCREEN
    SCREEN_USER = noentity()
    CLEAR_SCREEN = 1
    
    # BOOT
    if (MODE == "DEVELOPMENT") {
        SCREEN:egpClear()
        SCREEN:egpDrawTopLeft(1)

        PAGE = ""
        timer("BOOT", LOAD_SCREEN)
    }
    
    # GLOBAL TABLES
    GPLAYERS = gTable("SR3_PLAYERS", 0)
    GDATA = gTable("SR3_DATA", 0)
    
}

if (dupefinished() && MODE == "PRODUCTION") {
    SCREEN:egpClear()
    SCREEN:egpDrawTopLeft(1)
    
    PAGE = ""
    timer("BOOT", LOAD_SCREEN)
}

if (clk("BOOT")) {
    PAGE = "MAIN"
    stoptimer("BOOT")
}

# AFK SYSTEM
if (AFK_ACTIVE && changed(AFK_KICK) && AFK_KICK) {
    ACTION = "EXIT"
}

# DEFINE THE USER OF THE SCREEN
if (SCREEN_USER == noentity()) {
    if (USER:keyUse()){
        SCREEN_USER = USER
    }
}

# DEFINE THE CURSOR OF THE SCREEN USER AND KEEPS UPDATING IT
CURSOR = SCREEN:egpCursor(SCREEN_USER)

function void clearScreen()
{
    SCREEN:egpClear()
    CLEAR_SCREEN = 0
}

# CONTROL BUTTON PRESSES
function number buttonPress(BID:number, COLOR:vector)
{
    POSA = SCREEN:egpPos(BID)
    POSB = SCREEN:egpPos(BID) + SCREEN:egpSize(BID)
    
    if (SCREEN_USER:keyUse() && inrange(CURSOR, POSA, POSB) && !DISABLE_ACTION) {
        SCREEN:egpColor(BID, COLOR - vec(50))
        return 1
    }
    elseif (inrange(CURSOR, POSA, POSB)) {
        SCREEN:egpColor(BID, COLOR + vec(50))
    }
    else {
        SCREEN:egpColor(BID, COLOR)
    }

    return 0
}

function void drawPanel() {
    SCREEN:egpBox(1, vec2(0), vec2(512))
    SCREEN:egpColor(1, COLORS["BACKGROUND", vector])
}

function void drawHeader(SMALL:number) {
    SCREEN:egpText(2, "Shooting Range", vec2(256, 25))
    SCREEN:egpAlign(2, 1)
    SCREEN:egpSize(2, SMALL ? 50 : 70)
    SCREEN:egpFont(2, "Coolvetica")
    SCREEN:egpColor(2, COLORS["FOREGROUND", vector])
    
    SCREEN:egpText(3, "3", vec2(SMALL ? 412 : 470, SMALL ? 30 : 32))
    SCREEN:egpAlign(3, 1)
    SCREEN:egpSize(3, SMALL ? 20 : 25)
    SCREEN:egpFont(3, "Coolvetica")
    SCREEN:egpColor(3, COLORS["FOREGROUND", vector])
    
    SCREEN:egpText(4, "by NickMBR", vec2(SMALL ? 165 : 115, SMALL ? 65 : 75))
    SCREEN:egpAlign(4, 1)
    SCREEN:egpSize(4, SMALL ? 25 : 30)
    SCREEN:egpFont(4, "Coolvetica")
    SCREEN:egpColor(4, COLORS["FOREGROUND", vector])
}

function void drawMainPage() {
    if (CLEAR_SCREEN == 1) {
        clearScreen()
        drawPanel()
        drawHeader(0)
        
        local I = 5
        
        SCREEN:egpBox(I, vec2(0, 155), vec2(512, 200))
        SCREEN:egpColor(I, COLORS["GREY2", vector])
        I++
        
        SCREEN:egpBox(I, vec2(0, 165), vec2(512, 180))
        SCREEN:egpColor(I, COLORS["BACKGROUND", vector])
        I++
        
        local RANGER_TOPSCORE = GDATA["RANGER_TOPSCORE", number]
        SCREEN:egpText(I, isEmpty(RANGER_TOPSCORE) ? "N/A" : RANGER_TOPSCORE:toString(), vec2(256, 170))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 50)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["ACCENT", vector])
        I++
        
        SCREEN:egpText(I, "Ranger", vec2(256, 210))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 30)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++
        
        local ASSAULT_TOPSCORE = GDATA["ASSAULT_TOPSCORE", number]
        SCREEN:egpText(I, isEmpty(ASSAULT_TOPSCORE) ? "N/A" : ASSAULT_TOPSCORE:toString(), vec2(256, 270))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 50)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["ACCENT", vector])
        I++
        
        SCREEN:egpText(I, "Assault", vec2(256, 310))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 30)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++
        
        SCREEN:egpText(I, "Press 'USE' to continue...", vec2(256, 410))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 30)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++
    }
}

function void drawMenuPage() {
    if (CLEAR_SCREEN == 1) {
        clearScreen()
        drawPanel()
        drawHeader(1)
        
        local I = 5
        
        # GREETINGS
        SCREEN:egpText(I, "Hello " + concatPlayerName(SCREEN_USER:name()), vec2(256, 120))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 30)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++
        
        SCREEN:egpText(I, "You can use the screen for more: " + AFK_TIME_LEFT:toString() + "s", vec2(256, 145))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 18)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["GREY3", vector])
        I++
        
        # PLAY BUTTON
        SCREEN:egpBox(I, vec2(256 - (320/2), 185), vec2(320, 60))
        SCREEN:egpColor(I, COLORS["PRIMARY", vector])
        I++
        
        SCREEN:egpText(I, "Play", vec2(256, 190))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 50)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++
        
        # SETTINGS BUTTON
        SCREEN:egpBox(I, vec2(256 - (320/2), 250), vec2(320, 60))
        SCREEN:egpColor(I, COLORS["PRIMARY", vector])
        I++
        
        SCREEN:egpText(I, "Settings", vec2(256, 190 + 65))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 50)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++

        # LEADERBOARDS BUTTON
        SCREEN:egpBox(I, vec2(256 - (320/2), 315), vec2(320, 60))
        SCREEN:egpColor(I, COLORS["PRIMARY", vector])
        I++
        
        SCREEN:egpText(I, "Leaderboards", vec2(256, 190 + 65*2))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 50)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++
        
        # EXIT BUTTON
        SCREEN:egpBox(I, vec2(256 - (320/2), 380), vec2(320, 60))
        SCREEN:egpColor(I, COLORS["ACCENT", vector])
        I++
        
        SCREEN:egpText(I, "Exit", vec2(256, 190 + 65*3))
        SCREEN:egpAlign(I, 1)
        SCREEN:egpSize(I, 50)
        SCREEN:egpFont(I, "Coolvetica")
        SCREEN:egpColor(I, COLORS["FOREGROUND", vector])
        I++
    }
}

# PAGE BUTTON HANDLING
if (PAGE == "MENU") {
    SCREEN:egpSetText(6, "You can use the screen for more: " + AFK_TIME_LEFT:toString() + "s")
    if (buttonPress(7, COLORS["PRIMARY", vector])) { ACTION = "PLAY" }
    if (buttonPress(9, COLORS["PRIMARY", vector])) { ACTION = "SETTINGS" }
    if (buttonPress(11, COLORS["PRIMARY", vector])) { ACTION = "LEADERBOARDS" }
    if (buttonPress(13, COLORS["ACCENT", vector])) { ACTION = "EXIT" }
}


# PREVENT BUTTON ACTIONS
function void preventButtonAction() {
    DISABLE_ACTION = 1
    timer("PREVENT_ACTION", 300)
}

if (clk("PREVENT_ACTION")) {
    DISABLE_ACTION = 0
    stoptimer("PREVENT_ACTION")
}

# BUTTON ACTION HANDLING
if (changed(ACTION)) {
    print(ACTION)
    AFK_ACTIVE = 0
    timer("APPLY_ACTION", 300)
}

if (clk("APPLY_ACTION")) {
    preventButtonAction()
    if (PAGE != "MAIN") {
       AFK_ACTIVE = 1
    }

    if (ACTION == "EXIT") {
        PAGE = "MAIN"
    }
    stoptimer("APPLY_ACTION")
}

# PAGE HANDLING
if (changed(PAGE)) {
    CLEAR_SCREEN = 1
    ACTION = ""
    
    if (PAGE != "MAIN") {
        AFK_ACTIVE = 1
    }
    
    if (PAGE == "MAIN") {
        SCREEN_USER = noentity()
        AFK_ACTIVE = 0
        drawMainPage()
    }
    elseif (PAGE == "MENU") {
        drawMenuPage()
    }
}

if (changed(SCREEN_USER) && SCREEN_USER != noentity() && PAGE == "MAIN") {
    preventButtonAction()
    PAGE = "MENU"
}
